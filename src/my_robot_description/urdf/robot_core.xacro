<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <xacro:property name="pi" value="3.1415926535897931" />

    <xacro:include filename="inertial_macros.xacro"/>

    <material name="white">
        <color rgba="1 1 1 1" />
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <!-- BASE LINK -->
    <!-- The base_link is the conceptual center of the robot.
         Its +X axis should define the robot's forward direction. -->
    <link name="base_link">
    </link>


    <!-- CHASSIS LINK -->
    <!-- The chassis_joint defines how the chassis is attached to the base_link.
         If base_link's +X is forward, and chassis visual/collision is also forward,
         then the origin xyz and rpy here should reflect that.
         Your current xyz="-0.2 0 0" means the chassis center is 0.2m BEHIND base_link origin.
         If you want the base_link to be at the center of the chassis box, this joint's origin
         might need to be xyz="0 0 0" and the chassis visual/collision origin would be xyz="0 0 0.05"
         assuming the chassis box itself is centered.
         Let's assume your current definition of chassis relative to base_link IS how you want the body to look.
    -->
    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="-0.2 0 0" rpy="0 0 0"/> <!-- Assuming base_link is "in front" of chassis center -->
    </joint>

    <link name="chassis">
        <visual>
            <origin xyz="0.2 0 0.05"/> <!-- This origin is relative to the 'chassis' frame -->
            <geometry>
                <box size="0.4 0.3 0.1"/>
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <origin xyz="0.2 0 0.05"/>
            <geometry>
                <box size="0.4 0.3 0.1"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.5" x="0.4" y="0.3" z="0.1">
            <origin xyz="0.2 0 0.05" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>

    
    <!-- LIDAR LINK -->
    <!-- If the LIDAR scans are correctly aligned with the world,
         and the chassis model is 180 degrees wrong RELATIVE TO THE SCANS,
         then we adjust this joint.
         rpy="0 0 ${pi}" means the lidar_link frame's +X axis will be
         pointing in the opposite direction of the chassis frame's +X axis.
         So, if the chassis +X is currently "backward" (as per your observation),
         and lidar_link +X is "forward" (as per scans), this rotation makes them consistent.
         The chassis model's visual forward will now align with the lidar's scan forward.
    -->
    <joint name="lidar_joint" type="fixed">
        <parent link="chassis"/>
        <child link="lidar_link"/>
        <!-- The xyz origin is where the lidar_link origin is located relative to chassis frame origin.
             If the lidar is physically mounted at the front of the chassis (0.05m from chassis origin,
             assuming chassis origin is at its own center, and +X is forward for chassis)
             and the scans are "correct", but the robot model needs to flip... this is the key.
        -->
        <origin xyz="0.05 0 0.1" rpy="0 0 ${pi}"/> <!-- ROTATED 180 DEGREES AROUND Z-AXIS -->
    </joint>

    <link name="lidar_link">
        <!-- The visual and collision for lidar_link should be defined such that its
             own +X axis points in the direction of the 0-degree scan of the physical LIDAR unit.
             A cylinder usually has its length along Z by default in URDF unless rotated in visual/collision.
             If the cylinder visual is just a representation, its orientation within lidar_link might not
             be critical, AS LONG AS the lidar_link frame itself is correct.
        -->
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry> 
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>


    
    <!-- CAMERA LINK (Intel D405) -->
    <joint name="camera_joint" type="fixed"> <!-- Or name="d405_base_joint" -->
        <parent link="chassis"/>
        <child link="camera_link"/> <!-- THIS MUST BE "camera_link" to match realsense node -->
        <!-- !!! CRITICAL: MEASURE AND SET THESE XYZ AND RPY VALUES ACCURATELY !!! -->
        <!-- Example: D405 mounted 0.35m forward, 0.12m up from chassis origin, no tilt -->
        <origin xyz="0.35 0 0.12" rpy="0 0 0"/>
    </joint>

    <link name="camera_link"> <!-- This frame is the base of the D405 camera body -->
        <visual>
            <!-- Assuming camera_link's +X is forward (depth), +Y is left (width), +Z is up (height) -->
            <origin xyz="0 0 0" rpy="0 0 0"/> <!-- Visual origin relative to camera_link origin -->
            <geometry>
                <box size="0.023 0.099 0.020"/> <!-- D:0.023m (X), W:0.099m (Y), H:0.020m (Z) -->
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.023 0.099 0.020"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.07" x="0.023" y="0.099" z="0.020"> <!-- mass approx 70g -->
            <origin xyz="0 0 0" rpy="0 0 0"/> <!-- Inertial origin relative to camera_link origin -->
        </xacro:inertial_box>
    </link>

    
    <!-- WHEEL LINKS -->
    <!-- These are relative to base_link. If base_link is now correctly oriented
         because its child chassis is correctly oriented relative to the lidar scans,
         then the wheels should also be correctly oriented.
    -->

    <!-- LEFT WHEEL LINK -->
    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <origin xyz="-0.15 0.175 0" rpy="-${pi/2} 0 0" />
        <axis xyz="0 0 1"/>
    </joint>

    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>


    <!-- RIGHT WHEEL LINK -->
    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="-0.15 -0.175 0" rpy="${pi/2} 0 0" /> <!-- Note: Original had rpy="${pi/2} 0 0" which is fine -->
        <axis xyz="0 0 -1"/>
    </joint>

    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>


    <!-- FRONT LEFT WHEEL LINK -->
    <joint name="front_left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="front_left_wheel"/>
        <origin xyz="0.15 0.175 0" rpy="-${pi/2} 0 0" />
        <axis xyz="0 0 1"/>
    </joint>

    <link name="front_left_wheel">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>


    <!-- FRONT RIGHT WHEEL LINK -->
    <joint name="front_right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="front_right_wheel"/>
        <origin xyz="0.15 -0.175 0" rpy="${pi/2} 0 0" /> <!-- Note: Original had rpy="${pi/2} 0 0" -->
        <axis xyz="0 0 -1"/>
    </joint>

    <link name="front_right_wheel">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

</robot>